/* 3. Longest Substring Without Repeating Characters
Given a string, find the length of the longest substring without repeating characters.

Example 1:

Input: "abcabcbb"
Output: 3 
Explanation: The answer is "abc", which the length is 3.
Example 2:

Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3. 
             Note that the answer must be a substring, "pwke" is a subsequence and not a substring.
*/

class Solution {
    public int lengthOfLongestSubstring(String s) {
        int longest = 0;
        if(s.length()==1) return 1;
        for (int i = 0; i < s.length(); i++){
            int count = 0;
            for (int j = i; j < s.length(); j++){
                if (s.substring(i, j).contains(s.substring(j, j+1))) break;
                else count++;
            }
            if (count > longest) longest = count;
        }
        return longest;
    }
}
